user nginx;
worker_processes auto;
pid /run/nginx.pid;


events {
  worker_connections 1024;
}

http {

  server_tokens off;
  server_name_in_redirect off;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

  include mime.types;
  default_type application/octet-stream;

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

  map $request_method $proxy_body {
    POST $request_body;
    GET $query_string;
  }
  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  server {
    listen 80;
    return 301 https://$host;
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name localhost;

    # Change to point to your certs
    ssl_certificate cert.pem;
    ssl_certificate_key cert.key;
    ssl_trusted_certificate cert.pem;
    ssl_dhparam dhparam.pem;

    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;

    location / {
      proxy_pass http://localhost:8787;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
#      proxy_set_header Cookie "csrf-token=$request_id";
      proxy_method POST;
      proxy_set_header Content-Type application/x-www-form-urlencoded;
      proxy_set_header X-RStudio-Username rstudio-user;
#      proxy_set_header X-RStudio-Request $scheme://$host:$server_port$request_uri;
      #proxy_set_header X-RStudio-Root-Path /;
 #     proxy_set_body $proxy_body&csrf-token=$request_id;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;

      # Needed only for prefix of /rstudio
      # rewrite ^/rstudio(.*)$ /$1 break;

      # Use http here when ssl-enabled=0 is set in rserver.conf
      # proxy_pass http://localhost:8787;
      proxy_http_version 1.1;

      #proxy_set_header Upgrade $http_upgrade;
      #proxy_set_header Connection $connection_upgrade;

      # Set the Host header to match how users access your site. Omit :server_port if using the default 80/443
      # so that this value will match the Origin: header for CORS (cross origin security validation)
      #proxy_set_header Host $host;

      # Not needed if there's no prefix or www-root-path is set in rserver.conf
      # proxy_set_header X-RStudio-Root-Path /rstudio;

      # Tells Workbench to send redirect URLs back to https
      #proxy_set_header X-Forwarded-Proto https;

      proxy_read_timeout 20d;
    }

    location /auth-do-sign-in {
      proxy_pass http://localhost:8787;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
  #    proxy_set_header Cookie "csrf-token=$request_id";
      proxy_method POST;
      proxy_set_header Content-Type application/x-www-form-urlencoded;
      proxy_set_header X-RStudio-Username rstudio-user;
 #     proxy_set_header X-RStudio-Request $scheme://$host:$server_port$request_uri;
      #proxy_set_header X-RStudio-Root-Path /;
   #   proxy_set_body $proxy_body&csrf-token=$request_id;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
    }

    location /auth-sign-in {
      proxy_pass http://localhost:8787;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    #  proxy_set_header Cookie "csrf-token=$request_id";
      proxy_method POST;
      proxy_set_header Content-Type application/x-www-form-urlencoded;
      proxy_set_header X-RStudio-Username rstudio-user;
  #    proxy_set_header X-RStudio-Request $scheme://$host:$server_port$request_uri;
      #proxy_set_header X-RStudio-Root-Path /
     # proxy_set_body $proxy_body&csrf-token=$request_id;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
    }
  }
}
